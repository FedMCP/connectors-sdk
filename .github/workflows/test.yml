name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        cd core/python
        pip install -e ".[dev]"
    
    - name: Run tests
      run: |
        cd core/python
        pytest --cov=fedmcp --cov-report=xml
    
    - name: Run linting
      run: |
        cd core/python
        flake8 fedmcp tests
        mypy fedmcp

  test-go:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21', '1.22']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Run tests
      run: |
        cd core/go
        go test -v ./...
    
    - name: Run go vet
      run: |
        cd core/go
        go vet ./...
    
    - name: Run golint
      run: |
        go install golang.org/x/lint/golint@latest
        cd core/go
        golint ./...

  test-typescript:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18.x', '20.x']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install dependencies
      run: |
        cd core/typescript
        npm ci
    
    - name: Build
      run: |
        cd core/typescript
        npm run build
    
    - name: Run tests
      run: |
        cd core/typescript
        npm test
    
    - name: Run linting
      run: |
        cd core/typescript
        npm run lint

  test-server:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        cd server
        pip install -r requirements.txt
        pip install pytest pytest-asyncio
    
    - name: Run server tests
      run: |
        cd server
        python -m pytest tests/

  test-integration:
    runs-on: ubuntu-latest
    needs: [test-python, test-go, test-typescript, test-server]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Run integration tests
      run: |
        cd examples/quickstart
        docker-compose up -d
        sleep 10
        ./quickstart.sh
        docker-compose down